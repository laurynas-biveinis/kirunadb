---
name: main

on: [push]

env:
  CARGO_TERM_COLOR: always

jobs:
  build_and_test:
    strategy:
      matrix:
        toolchain:
          - stable
          - beta
          - nightly
        os:
          - ubuntu-latest
          - macos-latest
          - windows-latest
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3

      - run: rustup update ${{ matrix.toolchain }}

      - run: rustup default ${{ matrix.toolchain }}

      - name: Build
        run: cargo build --verbose

      - name: Run tests
        run: cargo test --verbose

      - name: Install Clippy
        run: rustup component add clippy

      - name: Run Clippy (default)
        run: cargo clippy --all-targets --all-features

      - name: Run Clippy (restrictions)
        run: |
          cargo clippy --all-targets --all-features -- -D clippy::dbg_macro \
              -D clippy::decimal_literal_representation \
              -D clippy::empty_structs_with_brackets -D clippy::exit \
              -D clippy::expect_used -D clippy::filetype_is_file \
              -D clippy::format_push_string -D clippy::if_then_some_else_none \
              -D clippy::lossy_float_literal -D clippy::map_err_ignore \
              -D clippy::mem_forget -D clippy::missing_enforced_import_renames \
              -D clippy::mod_module_files -D clippy::mutex_atomic \
              -D clippy::print_stderr -D clippy::print_stdout \
              -D clippy::rc_mutex -D clippy::rest_pat_in_fully_bound_structs \
              -D clippy::str_to_string -D clippy::string_to_string \
              -D clippy::try_err -D clippy::unneeded_field_pattern \
              -D clippy::unwrap_used -D clippy::use_debug \
              -D clippy::verbose_file_reads
        if: runner.os != 'Windows' && ${{matrix.toolchain}} != 'nightly'
